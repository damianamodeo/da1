{
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/*.git": true,
    "**/.firebase": true,
    "**/.nx": true,
    "**/.vscode": true,
    "**/dist": true,
    "**/local": true,
    "**/node_modules": true,
    "**/firebase-export-*": true
  },
  "editor.inlineSuggest.showToolbar": "always",
  "explorerExclude.backup": {},

  "indentRainbow.colors": [
    // "rgba(255,255,64,0.9)",
    // "rgba(127,255,127,0.9)",
    // "rgba(255,127,255,0.9)",
    // "rgba(79,236,236,0.9)",
    "rgba(255,100,100,0.9)",
    "rgba(255,255,0,0.9)",
    "rgba(0,255,0,0.6)",
    // "rgba(0,255,255,0.6)",
    "rgba(100,200,255,0.9)"
    // "rgba(255,0,255,0.6)",
  ],
  "indentRainbow.lightIndicatorStyleLineWidth": 0.3,

  "prettier.bracketSameLine": true,
  "prettier.quoteProps": "consistent",

  "commands.workspaceCommands": {
    "Workspace Scripts": {
      "nestedItems": {
        "serve for development": {
          "sequence": [
            // SERVE SELECTED APP
            {
              "command": "commands.runInTerminal",
              // "args": {
              //   "text": "npm create vite@latest ${input:folderName} -- --template ${input:template}",
              //   "reveal": true,
              //   "reuse": "newest"
              // },
              "args": {
                "text": "npx nx run app-${input:app}:serve --host",
                "name": "serve wip",
                "reveal": true,
                "iconColor": "charts.green",
                "waitForExit": false,
                "reuse": "newest"
              },
              "inputs": [
                // {
                //   "type": "promptString",
                //   "id": "folderName",
                //   "description": "Enter project name."
                // },
                {
                  "type": "pickString",
                  "id": "app",
                  "description": "Select app to serve",
                  "options": ["proclaimer", "ionic-template"]
                }
              ]
            },
            // SERVE TESTING
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "npx nx run app-testing:serve --host",
                "name": "serve testing",
                "iconColor": "charts.blue",
                "reveal": true,
                "waitForExit": false,
                "reuse": "newest"
              }
            },
            // KILL OLD EMULATOR
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "lsof -t -i tcp:8080 | xargs kill && exit",
                "name": "kill",
                "reveal": true,
                "waitForExit": true,
                "reuse": "newest"
              }
            },
            // SERVE NEW EMULATOR
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "firebase emulators:start --import=./local --export-on-exit --only firestore",
                "name": "emulators",
                "iconColor": "charts.yellow",
                "reveal": true,
                "waitForExit": false,
                "reuse": "newest"
              }
            }
          ]
        },

        "serve latest project": {
          "sequence": [
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "npx nx run testing:serve --host",
                "name": "serve testing",
                "iconColor": "charts.blue",
                "reveal": true,
                "waitForExit": false,
                "reuse": "newest"
              }
            },
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "npx nx run proclaimer:serve --host",
                "name": "serve wip",
                "reveal": true,

                "iconColor": "charts.green",
                "waitForExit": false,
                "reuse": "newest"
              }
            },
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "lsof -t -i tcp:8080 | xargs kill && exit",
                "name": "kill",
                "reveal": true,
                "waitForExit": true,
                "reuse": "newest"
              }
            },
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "firebase emulators:start --import=./local --export-on-exit --only firestore",
                "name": "emulators",
                "iconColor": "charts.yellow",
                "reveal": true,
                "waitForExit": true,
                "reuse": "newest"
              }
            }
          ]
        },
        "end latest project": {
          "sequence": [
            {
              "command": "commands.focusTerminal",
              "args": {
                "name": "emulators",
                "target": "newest"
              }
            },
            {
              "command": "workbench.action.terminal.sendSequence",
              "args": {
                "text": "\u0003"
              }
            },
            {
              "command": "commands.focusTerminal",
              "args": {
                "name": "emulators",
                "target": "newest"
              }
            },
            {
              "command": "workbench.action.terminal.kill"
            },
            {
              "command": "commands.focusTerminal",
              "args": {
                "name": "serve",
                "target": "newest"
              }
            },
            {
              "command": "workbench.action.terminal.kill"
            }
          ]
        },
        "deploy latest project": {
          "sequence": [
            {
              "command": "commands.toggleSetting",
              "args": {
                "setting": "workbench.panel.opensMaximized",
                "value": ["always"]
              }
            },
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "nx run app-ionic2:build",
                "name": "build",
                "reveal": true,
                "waitForExit": true,
                "reuse": "newest"
              }
            },
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "nx run app-ionic-test1:deploy",
                "name": "deploy",
                "reveal": true,
                // "waitForExit": true,
                "reuse": "newest"
              }
            },
            {
              "command": "commands.runInTerminal",
              "args": {
                "text": "echo 'Deploy Time:' $(date +'%T')",
                "name": "deploy",
                "reveal": true,
                // "waitForExit": true,
                "reuse": "newest"
              }
            },
            {
              "command": "commands.toggleSetting",
              "args": {
                "setting": "workbench.panel.opensMaximized",
                "value": ["preserve"]
              }
            }
          ]
        },
        "test command": {
          "command": "commands.runInTerminal",
          "args": {
            "text": "echo 'Deploy Time:' $(date +'%T')",
            "name": "deploy",
            "reveal": true,
            // "waitForExit": true,
            "reuse": "newest"
          }
        }
      }
    }
  },
  "commands.showKeybindings": true,
  "commands.documentLinksEnabled": true
}
